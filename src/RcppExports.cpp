// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// nnmf_rcpp
Rcpp::List nnmf_rcpp(const arma::mat& A, arma::mat& W, arma::mat& H, const unsigned int inner_max_iter);
RcppExport SEXP _NNLM_nnmf_rcpp(SEXP ASEXP, SEXP WSEXP, SEXP HSEXP, SEXP inner_max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type inner_max_iter(inner_max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(nnmf_rcpp(A, W, H, inner_max_iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NNLM_nnmf_rcpp", (DL_FUNC) &_NNLM_nnmf_rcpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_NNLM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
